#!/bin/bash

# $1: the classpath 
# $2: the odex files for processing
# $3: the result file type: jar or apk
function deodex_one_file() {
    classpath=$1
    file=$2
    tofile=${file/odex/$3}
    echo "processing $tofile"
    baksmali -c $classpath -d framework -I -x $file || exit -2 
    smali out -o classes.dex || exit -2
    jar uf $tofile classes.dex
    rm classes.dex
    rm -rf out
    rm $file
    zipalign 4 $tofile $tofile.aligned
    mv $tofile.aligned $tofile
}


function deodex_zip() {
    zippath=$1
    rompath=$2
    temppath=`echo $PWD`
    echo "unzip $zippath to $rompath"
    unzip -o -q $zippath -d $rompath

    cd $rompath/[Ss][Yy][Ss][Tt][Ee][Mm]

    ls framework/core.odex > /dev/null
    if [ $? -eq 0 ] ; then
        deodex_one_file "" framework/core.odex jar
    fi

    for f in framework/*.jar; do
        classpath=$classpath:$f
    done

    ls framework/*.odex > /dev/null
    if [ $? -eq 0 ]; then
        for file in framework/*.odex; do
            deodex_one_file $classpath $file jar
        done
    fi

    ls app/*.odex > /dev/null
    if [ $? -eq 0 ]; then
        for file in app/*.odex; do
            deodex_one_file $classpath $file apk
        done
    fi
    cd -
}

function usage() {
    echo "usage: deodex -z zipfile -d extractdir"
    echo "usage: deodex -a apkfile -c classpath"
}

apkpath=
zippath=
rompath=
classpath=
while getopts "ha:c:z:d:" opt; do
  case $opt in
    h)
      usage
      exit 1
      ;;
    a)
      apkpath=$OPTARG
      ;;
    c)
      classpath=$OPTARG
      ;;
    d)
      rompath=$OPTARG
      ;;
    z)
      zippath=$OPTARG
      ;;
    ?)
      usage
      exit 1
      ;;
    :)
      usage
      exit 1
      ;;
  esac
done

if [[ -n "$apkpath" ]] && [[ -n "$classpath" ]]; then
    deodex_one_file $apkpath $classpath
fi
echo "$zippath $rompath"
if [[ -n "$zippath" ]] && [[ -n "$rompath" ]]; then
    deodex_zip $zippath $rompath
fi
