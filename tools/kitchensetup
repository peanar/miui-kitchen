#!/bin/bash
LANGPATH="languages"
LANG=
DEFAULT_LANG="it"
ROMPATH="rom"
apklist="tools/apk.list"
xmllist="tools/xml.list"
traslist="tools/$DEFAULT_LANG.list"

function loadlist() {
    apk=( `cat $apklist` )
    xml=( `cat $xmllist` )
    if [ -n $LANG ]; then
        traslist="tools/$LANG.list"
    fi
    tras=( `cat $traslist` )
}

function fixemail() {
    sed -i.bak '/"main_content""/d' app/Email/res/values/ids.xml
    rm app/Email/res/values/ids.xml.bak
    sed -i.bak '/"main_content""/d' app/Email/res/values/public.xml
    rm app/Email/res/values/public.xml.bak
    #sed -i.bak 's/main_content\"/main_content/' app/Email/res/values-sw600dp/styles.xml
    #rm app/Email/res/values-sw600dp/styles.xml.bak
    #sed -i.bak 's/main_content\"/main_content/' app/Email/res/values-sw800dp-port/styles.xml
    #rm app/Email/res/values-sw800dp-port/styles.xml.bak
    sed -i.bak '/main_content"/d' app/Email/res/values-sw600dp/styles.xml
    rm app/Email/res/values-sw600dp/styles.xml.bak
    sed -i.bak '/main_content"/d' app/Email/res/values-sw800dp-port/styles.xml
    rm app/Email/res/values-sw800dp-port/styles.xml.bak
}

function fixframework() {
    sed -i.bak 's/%d of %d/%1\$d of %2\$d/' framework/framework-res/res/values/plurals.xml
    rm framework/framework-res/res/values/plurals.xml.bak
    sed -i.bak 's/第 %d 项，共 %d 项/第 %1\$d 项，共 %2\$d 项/' framework/framework-res/res/values-zh-rCN/plurals.xml
    rm framework/framework-res/res/values-zh-rCN/plurals.xml.bak
    sed -i.bak '/<\/resources>/i \
    <item type="id" name="flag">false</item> \
    <item type="id" name="titleContent">false</item> \
    <item type="id" name="titlePrevious">false</item> \
    <item type="id" name="titleNext">false</item> \
    <item type="id" name="detaillayout">false</item> \
    <item type="id" name="scrollview">false</item> \
    <item type="id" name="parentlayout">false</item> \
    <item type="id" name="componentGrid">false</item> \
    <item type="id" name="resourcefile">false</item> \
    <item type="id" name="componentTitle">false</item>' framework/framework-miui-res/res/values/ids.xml
    rm framework/framework-miui-res/res/values/ids.xml.bak
    sed -i.bak -e '/"0x03070000"/i \
    <public type="array" name="android_config_statusBarIcons" id="0x0306000a" />' -e '/"0x030c0000"/i \
    <public type="id" name="flag" id="0x030b008c" /> \
    <public type="id" name="titleContent" id="0x030b008d" /> \
    <public type="id" name="titlePrevious" id="0x030b008e" /> \
    <public type="id" name="titleNext" id="0x030b008f" /> \
    <public type="id" name="detaillayout" id="0x030b0090" /> \
    <public type="id" name="scrollview" id="0x030b0091" /> \
    <public type="id" name="parentlayout" id="0x030b0092" /> \
    <public type="id" name="componentGrid" id="0x030b0093" /> \
    <public type="id" name="resourcefile" id="0x030b0094" /> \
    <public type="id" name="componentTitle" id="0x030b0095" />' framework/framework-miui-res/res/values/public.xml
    rm framework/framework-miui-res/res/values/public.xml.bak
}

function fixmiuicompass() {
    sed -i.bak 's/layout="@miui:layout\/android_transient_notification"/layout="@android:layout\/transient_notification"/' app/MiuiCompass/res/layout/main.xml
    rm app/MiuiCompass/res/layout/main.xml.bak
}

function fixmusic() {
    sed -i.bak 's/%s, %d/%1$s, %2$d/' app/Music/res/values/plurals.xml
    rm app/Music/res/values/plurals.xml.bak
}

function fix() {
    fixemail
    fixmusic
    fixframework
    fixmiuicompass
}

function apktool_build() {
    apktool -q b -f ${2}/${1} rom/new/system/${2}/${1}.apk
}

function build() {
    for pkg in ${apk[@]}; do
        echo "Build $pkg"
        apktool_build $(echo $pkg | tr ":" " ")
    done
}

function apktool_decode() {
    apktool -q d -s -f --keep-broken-res rom/miui/system/${2}/${1}.apk ${2}/$1
}

function decode() {
    for pkg in ${apk[@]}; do
        echo "Decode $pkg"
        apktool_decode $(echo $pkg | tr ":" " ")
    done
}

function xml_test() {
    temp=`diff $LANGPATH/zh/${1}/res/${2} ${3}/${1}/res/${2}`
    if [ -n "$temp" ]; then
        echo "$1 $2 changed. Copy it manualy with change."
    fi
}

function test() {
    for files in ${xml[@]}; do
        xml_test $(echo $files | tr ":" " ")
    done
}



#$1 Package name
#$2 language
#$3 path
function xml_copy() {
    cp -r --remove-destination $LANGPATH/$LANG/${1}/res/${2} ${3}/${1}/res/
}

function translate() {
    for files in ${tras[@]}; do
        xml_copy $(echo $files | tr ":" " ")
    done
    build_prop rom/new/system/build.prop it IT Europe/Rome
}

function setup() {
    mkdir -p $LANGPATH
    mkdir -p $ROMPATH/miui/
    mkdir -p $ROMPATH/new/
    mkdir -p app
    mkdir -p framework
    mkdir -p apk
    mkdir -p gapps
}

function extract() {
    deodex -z $ROMPATH/miui_*.zip -d $ROMPATH/miui
    cp -r --remove-destination $ROMPATH/miui/* $ROMPATH/new/
}

function clean() {
    rm -r $ROMPATH/miui/*
    rm -r $ROMPATH/new/*
    rm -r app/*
    rm -r framework/*
}

#function sign_target_files {
#    echo "Sign target files"
#    ./sign_target_files_apks -d ./security miui_update.zip temp.zip
#    mv temp.zip miui_update.zip
#}

function sign_apk() {
    echo ">>> Sign apks under dir $1..."
    for pkg in `find $1 -name "*.apk"`
    do
        echo ">>> Sign for $pkg"
        #delete_meta_info $pkg
        java -jar signapk.jar tools/security/testkey.x509.pem tools/security/testkey.pk8 $pkg $pkg.signed
        zipalign 4 $pkg.signed $pkg.signed.aligned
        mv $pkg.signed.aligned $pkg
        rm $pkg.signed
    done
}

function sign_zip() {
    signapk security/testkey.x509.pem security/testkey.pk8 $1.zip $1-signed.zip
}

function sign() {
    sign_apk "rom/new/system/app"
    sign_apk "rom/new/system/framework"
    zip -q -r -y rom/miui_update.zip rom/new/*
    sign_zip "rom/miui_update"
}

function addgapps() {
    cp -r --remove-destination gapps/* rom/new/
}

function addprebuild() {
    cp -r --remove-destination apk/* rom/new/system/app
}

function setlang() {
    local ANSWER
    while [ -z $LANG ]; do
        echo -n "Choose language ["$DEFAULT_LANG"] "
        if [ -z "$1" ] ; then
            read ANSWER
        else
            ANSWER=$1
        fi
        case $ANSWER in
        "")
            LANG=$DEFAULT_LANG
            ;;
        it)
            LANG="it"
            ;;
        *)
            echo
            echo "Language not implemented!"
            echo
            ;;
        esac
        if [ -n "$1" ] ; then
            break
        fi
    done
    loadlist
}

export PATH=$PATH:tools/bin
setlang
